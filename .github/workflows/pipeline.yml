name: Translator API CI Checks

on:
  push:
    branches: 
      - main
defaults: 
  run:
    working-directory: .
jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest 
    steps:
    - name: Set up Go 1.x 
      uses: actions/setup-go@v2
      with:
        go-version: ^1.21.6
    - name: Check out code into the Go module directory 
      uses: actions/checkout@v2
    - name: Run Test
      run: make test 
    - name: Coverage Check
      run: make coverage 
    - name: Generate Report
      run: make report 
    - name: Copy Files 
      run: |
           mkdir  reports
           cp cover.html reports/.

    - name: Archive 
      uses: actions/upload-artifact@v2
      with:
          name: reports
          path: ch3/reports  
  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test 
    steps:
    - name: Set up Go 1.x 
      uses: actions/setup-go@v2
      with:
        go-version: ^1.21.6

    - name: Check out code into the Go module directory #
      uses: actions/checkout@v2

    - name: Build
      run: make build 

    - name: Copy Files 
      run: |
           mkdir  artifacts
           cp api artifacts/.

    - name: Archive 
      uses: actions/upload-artifact@v2
      with:
          name: api 
          path: artifacts  
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download binary
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, we do not need to create our own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Still in experimental phase
          draft: true
          prerelease: true
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream